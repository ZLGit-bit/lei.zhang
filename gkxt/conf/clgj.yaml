spark:
   #spark计算sql
   res_sql: "
        select
        res.card_num,
        res.car_type  car_type,
        res.brand brand,
        res.sub_brand sub_brand,
        md5(concat(res.card_num,res.data_source,substr(res.col_time,1,19))) id ,
        pt.name name,
        case when res.card_type='1' and length(res.card_num)>=15 then res.card_num else per.id_num end as idcard,
        pt.person_type person_type,
        res.card_num cur_col_code,
        res.card_type cur_col_code_type,
        substr(res.col_time,1,19) cur_col_time,
        res.device_name cur_col_locale,
        res.data_source cur_data_source,
        sou.value data_source,
        res.behavior cur_behave_flag,
        res.pic1 pic1,
        res.pic2 pic2,
        res.pic3 pic3,
        from_unixtime(unix_timestamp()) etl_time,
        case when res.lon='0' then null else res.lon end as cur_long,
        case when res.lat='0' then null else res.lat end as cur_lat,
        case when concat(res.lat,',',res.lon)=',' or res.lat='0' or res.lon='0' then null else concat(res.lat,',',res.lon) end as device_location,
        case when concat(res.lat,',',res.lon)=',' or res.lat='0' or res.lon='0' then null else concat(res.lat,',',res.lon) end as device_loc_str,
        dev.id dev_id,
        res.device_id cur_dev_code,
        case when res.device_name is null then '未知' else res.device_name end as cur_dev_name,
        dev.province_code,
        dev.province device_province,
        dev.city_code,
        case when dev.city is null then '未知' else dev.city end as device_city,
        dev.district_code,
        dev.district device_district,
        dev.town device_town,   
        dev.street device_street,
        case when last.idcard is null then res.card_num else last.cur_col_code end as pre_col_code,
        case when last.idcard is null then res.card_type else last.cur_col_code_type  end as pre_col_code_type,
        case when last.idcard is null then res.col_time else last.cur_col_time end as pre_col_time,
        case when last.idcard is null then dev.name else last.cur_col_locale end as pre_col_locale,
        case when last.idcard is null then res.data_source else last.cur_data_source end as pre_data_source,
        case when last.idcard is null then res.behavior else last.cur_behave_flag end as pre_behave_flag,
        case when last.idcard is null then dev.lon else last.cur_long end as pre_long,
        case when last.idcard is null then dev.lat else last.cur_lat end as pre_lat,
        case when last.idcard is null then dev.code else last.cur_dev_code end as pre_dev_code,
        case when last.idcard is null then dev.name else last.cur_dev_name end as pre_dev_name,
        case when last.idcard is null then res.pic1 else last.cur_pic end as pre_pic,
        row_number() over(distribute by res.card_num sort by res.col_time desc) rank
        
    from res_tb res
    inner join union_relation per
    on res.card_num=per.card_num
    left join device_info dev
    on res.device_id=dev.code and res.behavior=dev.behavior
    left join dw_keyperson_last_place last
    on per.id_num=last.idcard  
    left join 
    (
        select   o_info.object_business_code,conf.value person_type,object_name name
        from object_info o_info
        left join object_type_relation o_type
        on o_info.id=o_type.object_id
        left join
        (
                select id,code,value from dictionary_config
                where type_code='person_type'
        ) conf
        on o_type.object_type_id=conf.code
    ) pt on per.id_num=pt.object_business_code
    left join (
        select id,code,value from dictionary_config
        where type_code='trail_data_source'
    ) sou
    on res.data_source=sou.code
    where length(res.card_num)>2"

   #spark计算频率(秒)
   schedule: 20

mysql:
   user: root
   password: bbi!zmkj0520
   url: jdbc:mysql://86.1.41.98:3306/controls?characterEncoding=UTF-8&useSSL=False
   list_url: mysql+mysqldb://root:bbi!zmkj0520@86.1.41.98:3306/controls?charset=utf8
   #spark计算所需要的mysql表
   regist_tb: union_relation,device_info,dw_keyperson_last_place,object_info,object_type_relation,dictionary_config
   #最后一次位置所在的mysql表
   last_place_tb: dw_keyperson_last_place
   #重点人最后一次位置更新到MySQL
   last_place_sql: "

        update %s A
        inner join %s B
        on A.idcard=B.idcard
      set 
        A.name = B.name,
        A.idcard = B.idcard,
        A.cur_col_code = B.cur_col_code,
        A.cur_col_code_type = B.cur_col_code_type,
        A.cur_col_time = B.cur_col_time,
        A.cur_col_locale = B.cur_col_locale,
        A.cur_data_source = B.cur_data_source,
        A.cur_behave_flag = B.cur_behave_flag,
        A.cur_long = B.cur_long,
        A.cur_lat = B.cur_lat,
        A.cur_dev_code = B.cur_dev_code,
        A.cur_pic = B.cur_pic,
        A.cur_dev_name = B.cur_dev_name,
        A.pre_col_code = B.pre_col_code,
        A.pre_col_code_type = B.pre_col_code_type,
        A.pre_col_time = B.pre_col_time,
        A.pre_col_locale = B.pre_col_locale,
        A.pre_data_source = B.pre_data_source,
        A.pre_behave_flag = B.pre_behave_flag,
        A.pre_long = B.pre_long,
        A.pre_lat = B.pre_lat,
        A.pre_dev_code = B.pre_dev_code,
        A.pre_pic = B.pre_pic,
        A.pre_dev_name = B.pre_dev_name
        where B.cur_col_time>A.cur_col_time;

        insert into %s(name,idcard,cur_col_code,cur_col_code_type,cur_col_time,cur_col_locale,cur_data_source,cur_behave_flag,cur_long,cur_lat,cur_dev_code,cur_pic,cur_dev_name,pre_col_code,pre_col_code_type,pre_col_time,pre_col_locale,pre_data_source,pre_behave_flag,pre_long,pre_lat,pre_dev_code,pre_pic,pre_dev_name,is_delete)
        select A.name,A.idcard,A.cur_col_code,A.cur_col_code_type,A.cur_col_time,A.cur_col_locale,A.cur_data_source,A.cur_behave_flag,case when A.cur_long='0' then null else A.cur_long end as cur_long,case when A.cur_lat='0' then null else A.cur_lat end as cur_lat,A.cur_dev_code,A.cur_pic,A.cur_dev_name,A.pre_col_code,A.pre_col_code_type,A.pre_col_time,A.pre_col_locale,A.pre_data_source,A.pre_behave_flag,A.pre_long,A.pre_lat,A.pre_dev_code,A.pre_pic,A.pre_dev_name,A.is_delete
        from %s A 
        left join %s B
        on A.idcard=B.idcard 
        where B.idcard is null;"       

kafka:
   broker_list: 86.1.42.20:9092
   group_id: clgj_group
   #数据源口topic
   from_topic: clgj
   #重点人关联结果存储topic
   to_topic: realtime_track

#人员轨迹存储
es:
   index: person_track
   type: person_track
   nodes: 10.166.114.151,10.166.114.160
   port: 9200
   #es数据保留天数
   days: 30

#kafka offset存储
redis:
   host: 86.1.42.20
   port: 6372
   pass: Ynza@redis
